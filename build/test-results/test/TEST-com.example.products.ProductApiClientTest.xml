<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.products.ProductApiClientTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2025-04-06T11:56:14.900Z" hostname="192.168.1.4" time="0.769">
  <properties/>
  <testcase name="createProductInvalidData()" classname="com.example.products.ProductApiClientTest" time="0.705"/>
  <testcase name="getProduct()" classname="com.example.products.ProductApiClientTest" time="0.028"/>
  <testcase name="getProductInvalidId()" classname="com.example.products.ProductApiClientTest" time="0.006"/>
  <testcase name="getProducts()" classname="com.example.products.ProductApiClientTest" time="0.007"/>
  <testcase name="getProductNotFound()" classname="com.example.products.ProductApiClientTest" time="0.006"/>
  <testcase name="createProduct()" classname="com.example.products.ProductApiClientTest" time="0.011"/>
  <system-out><![CDATA[Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
14:56:13.260 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.products.ProductApiClientTest]: ProductApiClientTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:56:13.338 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.products.Application for test class com.example.products.ProductApiClientTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.3)

2025-04-06T14:56:13.566+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:13.584+03:00  INFO 82890 --- [    Test worker] c.m.w.spring.WireMockContextCustomizer   : Configuring WireMockServer with name 'wiremock-service-name' on port: 0
2025-04-06T14:56:13.996+03:00  INFO 82890 --- [    Test worker] c.m.w.spring.WireMockContextCustomizer   : Started WireMockServer with name 'wiremock-service-name':http://localhost:56634
2025-04-06T14:56:13.996+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:14.025+03:00  INFO 82890 --- [    Test worker] c.example.products.ProductApiClientTest  : Starting ProductApiClientTest using Java 23.0.2 with PID 82890 (started by vanonatobaidze in /Users/vanonatobaidze/projects/pactflow/pactflow-consumer)
2025-04-06T14:56:14.025+03:00  INFO 82890 --- [    Test worker] c.example.products.ProductApiClientTest  : No active profile set, falling back to 1 default profile: "default"
2025-04-06T14:56:14.875+03:00  INFO 82890 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-04-06T14:56:14.875+03:00  INFO 82890 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-04-06T14:56:14.876+03:00  INFO 82890 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2025-04-06T14:56:14.892+03:00  INFO 82890 --- [    Test worker] c.example.products.ProductApiClientTest  : Started ProductApiClientTest in 1.474 seconds (process running for 2.248)
2025-04-06T14:56:14.901+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:14.902+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.588+03:00  INFO 82890 --- [qtp395257482-44] WireMock                                 : Request received:
127.0.0.1 - POST /products

Accept: [application/json]
Content-Length: [41]
Content-Type: [application/json; charset=UTF-8]
Host: [localhost:56634]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]
{"id":"","name":"","type":"","price":0.0}


Matched response definition:
{
  "status" : 400,
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 400
Content-Type: [application/json]
Matched-Stub-Id: [eede4978-5583-4b52-bfd3-d8beb8405e71]

2025-04-06T14:56:15.608+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.609+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.613+03:00  INFO 82890 --- [qtp395257482-38] WireMock                                 : Request received:
127.0.0.1 - GET /product/10

Accept: [application/json]
Host: [localhost:56634]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]



Matched response definition:
{
  "status" : 200,
  "body" : "{ \"id\": \"10\", \"name\": \"pizza\", \"type\": \"food\", \"price\": 100.0 }",
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 200
Content-Type: [application/json]
Matched-Stub-Id: [4aa69f39-19b6-4e96-8afd-21b62e53ebea]

2025-04-06T14:56:15.636+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.637+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.640+03:00  INFO 82890 --- [qtp395257482-43] WireMock                                 : Request received:
127.0.0.1 - GET /product/invalid-id

Accept: [application/json]
Host: [localhost:56634]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]



Matched response definition:
{
  "status" : 400,
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 400
Content-Type: [application/json]
Matched-Stub-Id: [8be2fc0e-e31f-43eb-9459-a7c23775c295]

2025-04-06T14:56:15.643+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.644+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.646+03:00  INFO 82890 --- [qtp395257482-42] WireMock                                 : Request received:
127.0.0.1 - GET /products

Accept: [application/json]
Host: [localhost:56634]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]



Matched response definition:
{
  "status" : 200,
  "body" : "[{ \"id\": \"10\", \"name\": \"pizza\", \"type\": \"food\", \"price\": 100.0 }]",
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 200
Content-Type: [application/json]
Matched-Stub-Id: [897efd01-84a9-40d4-992a-ccbab2ebbbd6]

2025-04-06T14:56:15.652+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.653+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.656+03:00  INFO 82890 --- [qtp395257482-43] WireMock                                 : Request received:
127.0.0.1 - GET /product/999

Accept: [application/json]
Host: [localhost:56634]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]



Matched response definition:
{
  "status" : 404,
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 404
Content-Type: [application/json]
Matched-Stub-Id: [e437b7fb-7b48-4d0b-92e9-d6e969753a62]

2025-04-06T14:56:15.659+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.660+03:00  INFO 82890 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-06T14:56:15.666+03:00  INFO 82890 --- [qtp395257482-42] WireMock                                 : Request received:
127.0.0.1 - POST /products

Accept: [application/json]
Content-Length: [53]
Content-Type: [application/json; charset=UTF-8]
Host: [localhost:56634]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]
{"id":"27","name":"pizza","type":"food","price":27.0}


Matched response definition:
{
  "status" : 200,
  "body" : "{ \"id\": \"27\", \"name\": \"pizza\", \"type\": \"food\", \"price\": 27.0 }",
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 200
Content-Type: [application/json]
Matched-Stub-Id: [94ae598d-95a8-4e2a-93af-8295ce753573]

]]></system-out>
  <system-err><![CDATA[Apr 06, 2025 2:56:13 PM se.bjurr.wiremockpact.wiremockpactlib.api.WireMockPactApi clearAllSaved
INFO: Clearing PACT JSON in /Users/vanonatobaidze/projects/pactflow/pactflow-consumer/build/pacts
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (/Users/vanonatobaidze/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.15.11/a38b16385e867f59a641330f0362ebe742788ed8/byte-buddy-agent-1.15.11.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
