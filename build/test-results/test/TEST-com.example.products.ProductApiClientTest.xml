<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.products.ProductApiClientTest" tests="6" skipped="0" failures="0" errors="0" timestamp="2025-04-13T13:43:15.706Z" hostname="192.168.1.4" time="0.667">
  <properties/>
  <testcase name="createProductInvalidData()" classname="com.example.products.ProductApiClientTest" time="0.606"/>
  <testcase name="getProduct()" classname="com.example.products.ProductApiClientTest" time="0.025"/>
  <testcase name="getProductInvalidId()" classname="com.example.products.ProductApiClientTest" time="0.007"/>
  <testcase name="getProducts()" classname="com.example.products.ProductApiClientTest" time="0.008"/>
  <testcase name="getProductNotFound()" classname="com.example.products.ProductApiClientTest" time="0.007"/>
  <testcase name="createProduct()" classname="com.example.products.ProductApiClientTest" time="0.01"/>
  <system-out><![CDATA[Standard Commons Logging discovery in action with spring-jcl: please remove commons-logging.jar from classpath in order to avoid potential conflicts
16:43:14.621 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.products.ProductApiClientTest]: ProductApiClientTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
16:43:14.680 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.products.Application for test class com.example.products.ProductApiClientTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.3)

2025-04-13T16:43:14.837+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:14.849+03:00  INFO 76546 --- [    Test worker] c.m.w.spring.WireMockContextCustomizer   : Configuring WireMockServer with name 'wiremock-service-name' on port: 0
2025-04-13T16:43:15.188+03:00  INFO 76546 --- [    Test worker] c.m.w.spring.WireMockContextCustomizer   : Started WireMockServer with name 'wiremock-service-name':http://localhost:56910
2025-04-13T16:43:15.188+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:15.202+03:00  INFO 76546 --- [    Test worker] c.example.products.ProductApiClientTest  : Starting ProductApiClientTest using Java 23.0.2 with PID 76546 (started by vanonatobaidze in /Users/vanonatobaidze/projects/pactflow/pactflow-consumer)
2025-04-13T16:43:15.203+03:00  INFO 76546 --- [    Test worker] c.example.products.ProductApiClientTest  : No active profile set, falling back to 1 default profile: "default"
2025-04-13T16:43:15.685+03:00  INFO 76546 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2025-04-13T16:43:15.686+03:00  INFO 76546 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2025-04-13T16:43:15.687+03:00  INFO 76546 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2025-04-13T16:43:15.699+03:00  INFO 76546 --- [    Test worker] c.example.products.ProductApiClientTest  : Started ProductApiClientTest in 0.962 seconds (process running for 1.575)
2025-04-13T16:43:15.707+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:15.708+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.298+03:00  INFO 76546 --- [qtp395257482-44] WireMock                                 : Request received:
127.0.0.1 - POST /products

Accept: [application/json]
Content-Length: [41]
Content-Type: [application/json; charset=UTF-8]
Host: [localhost:56910]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]
{"id":"","name":"","type":"","price":0.0}


Matched response definition:
{
  "status" : 400,
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 400
Content-Type: [application/json]
Matched-Stub-Id: [a534f8e9-818d-4e0b-af4e-028c1c88fc88]

2025-04-13T16:43:16.314+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.315+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.318+03:00  INFO 76546 --- [qtp395257482-38] WireMock                                 : Request received:
127.0.0.1 - GET /product/10

Accept: [application/json]
Host: [localhost:56910]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]



Matched response definition:
{
  "status" : 200,
  "body" : "{ \"id\": \"10\", \"name\": \"pizza\", \"type\": \"food\", \"price\": 100.0 }",
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 200
Content-Type: [application/json]
Matched-Stub-Id: [22fe7cd3-2613-4dac-86c2-9abe99988fb2]

2025-04-13T16:43:16.340+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.340+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.343+03:00  INFO 76546 --- [qtp395257482-43] WireMock                                 : Request received:
127.0.0.1 - GET /product/invalid-id

Accept: [application/json]
Host: [localhost:56910]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]



Matched response definition:
{
  "status" : 400,
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 400
Content-Type: [application/json]
Matched-Stub-Id: [723d2077-670c-49f9-85ce-224ed34e533e]

2025-04-13T16:43:16.347+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.348+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.351+03:00  INFO 76546 --- [qtp395257482-42] WireMock                                 : Request received:
127.0.0.1 - GET /products

Accept: [application/json]
Host: [localhost:56910]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]



Matched response definition:
{
  "status" : 200,
  "body" : "[{ \"id\": \"10\", \"name\": \"pizza\", \"type\": \"food\", \"price\": 100.0 }]",
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 200
Content-Type: [application/json]
Matched-Stub-Id: [90295f05-e1e0-47ab-b294-e7b63b93da89]

2025-04-13T16:43:16.356+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.357+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.360+03:00  INFO 76546 --- [qtp395257482-43] WireMock                                 : Request received:
127.0.0.1 - GET /product/999

Accept: [application/json]
Host: [localhost:56910]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]



Matched response definition:
{
  "status" : 404,
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 404
Content-Type: [application/json]
Matched-Stub-Id: [95a8cc29-7290-4400-8483-75a84fdc101c]

2025-04-13T16:43:16.364+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.364+03:00  INFO 76546 --- [    Test worker] c.maciejwalkowiak.wiremock.spring.Store  : Resolving store from context: application
2025-04-13T16:43:16.369+03:00  INFO 76546 --- [qtp395257482-42] WireMock                                 : Request received:
127.0.0.1 - POST /products

Accept: [application/json]
Content-Length: [53]
Content-Type: [application/json; charset=UTF-8]
Host: [localhost:56910]
Connection: [keep-alive]
User-Agent: [Apache-HttpClient/4.5.14 (Java/23.0.2)]
Accept-Encoding: [gzip,deflate]
{"id":"27","name":"pizza","type":"food","price":27.0}


Matched response definition:
{
  "status" : 200,
  "body" : "{ \"id\": \"27\", \"name\": \"pizza\", \"type\": \"food\", \"price\": 27.0 }",
  "headers" : {
    "Content-Type" : "application/json"
  }
}

Response:
HTTP/1.1 200
Content-Type: [application/json]
Matched-Stub-Id: [c52a05d5-c429-4b7d-b724-11f23a66a41f]

]]></system-out>
  <system-err><![CDATA[Apr 13, 2025 4:43:14 PM se.bjurr.wiremockpact.wiremockpactlib.api.WireMockPactApi clearAllSaved
INFO: Clearing PACT JSON in /Users/vanonatobaidze/projects/pactflow/pactflow-consumer/build/pacts
Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (/Users/vanonatobaidze/.gradle/caches/modules-2/files-2.1/net.bytebuddy/byte-buddy-agent/1.15.11/a38b16385e867f59a641330f0362ebe742788ed8/byte-buddy-agent-1.15.11.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
